"""
Django settings for audtech_project project.

Generated by 'django-admin startproject' using Django 2.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os
from collections import OrderedDict
from django.utils.translation import ugettext_lazy as _
# Django settings for audtech_project project.

DEBUG = True
BASE_DIR = os.path.dirname(os.path.dirname(__file__))
# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
# BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'r4+ks093uvwz5lcygl#jzc+o=kj^viqwqg@)6#3^oqc*8!saj2'

ALLOWED_HOSTS = ['*']

# Application definition
SHARED_APPS = [
    'tenant_schemas',  # mandatory
    'customers',  # you must list the app where your tenant model resides in
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.messages',
    'django.contrib.sessions',
    # 'django.contrib.staticfiles',
]
TENANT_APPS = [
    # The following Django contrib apps must be in TENANT_APPS
    'audtech_analytics',
    'django.contrib.contenttypes',
    'django.contrib.auth',
]

DATE_INPUT_FORMATS=[
    '%Y-%m-%d', '%m/%d/%Y', '%m/%d/%y', # '2006-10-25', '10/25/2006', '10/25/06'
]
TENANT_MODEL = "customers.Client"  # app.Model

DEFAULT_FILE_STORAGE = 'tenant_schemas.storage.TenantFileSystemStorage'
CRISPY_TEMPLATE_PACK = 'bootstrap4'

INSTALLED_APPS = [
    'tenant_schemas',
    'customers',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'audtech_analytics',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'crispy_forms',
    'widget_tweaks',
    'django.contrib.humanize',
]
MIDDLEWARE = [
    'audtech_project.middleware.TenantTutorialMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.security.SecurityMiddleware',
    # Uncomment the next line for simple clickjacking protection:
    # 'django.middleware.clickjacking.XFrameOptionsMiddleware',
]
ROOT_URLCONF = 'audtech_project.urls_public'
PUBLIC_SCHEMA_URLCONF = 'audtech_project.urls_public'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(os.path.dirname(__file__), '..', 'templates').replace('\\', '/'),
            ],
        'APP_DIRS': True,
        'OPTIONS': {
            'debug': DEBUG,
            'context_processors': [
                # Insert your TEMPLATE_CONTEXT_PROCESSORS here or use this
                'django.template.context_processors.debug',
                'django.template.context_processors.i18n',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.static',
                'django.template.context_processors.media',
                ],
        },
    },
]
# A

WSGI_APPLICATION = 'audtech_project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'tenant_schemas.postgresql_backend',  # Add 'postgresql_psycopg2', 'mysql', 'sqlite3' or 'oracle'.
        'NAME': 'tenant_tutorial',                      # Or path to database file if using sqlite3.
        'USER': 'postgres',
        'PASSWORD': 'root',
        'HOST': 'localhost',   # Empty for localhost through domain sockets or '127.0.0.1' for localhost through TCP.
        'PORT': '',            # Set to empty string for default.
    }
}

# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]
DATABASE_ROUTERS = (
    'tenant_schemas.routers.TenantSyncRouter',
)


TEST_RUNNER = 'django.test.runner.DiscoverRunner'

LANGUAGE_CODE = 'en-us'
TIME_ZONE =  'Asia/Kolkata'

SITE_ID = 1
SESSION_SERIALIZER = 'django.contrib.sessions.serializers.JSONSerializer'
# SESSION_COOKIE_HTTPONLY=True
# SESSION_SAVE_EVERY_REQUEST = True
# SESSION_ENGINE = 'django.contrib.sessions.backends.signed_cookies'
# If you set this to False, Django will make some optimizations so as not
# to load the internationalization machinery.
USE_I18N = True

# If you set this to False, Django will not format dates, numbers and
# calendars according to the current locale.
USE_L10N = True

# If you set this to False, Django will not use timezone-aware datetimes.
USE_TZ = False

# Absolute filesystem path to the directory that will hold user-uploaded files.
# Example: "/var/www/example.com/media/"
MEDIA_ROOT = ''

MEDIA_URL = "/media/"
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

MESSAGE_STORAGE = 'django.contrib.messages.storage.session.SessionStorage'
# URL prefix for static files.
# Example: "http://example.com/static/", "http://static.example.com/"
STATIC_URL = '/static/'

STATICFILES_DIRS = [
     os.path.join(os.path.dirname(__file__), '..', 'static').replace('\\', '/'),
]
STATIC_ROOT = os.path.join(os.path.dirname(BASE_DIR),'audtech_project/static_cdn')
